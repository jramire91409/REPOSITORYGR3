{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "DFGR03-2024"
		},
		"AzureBlobStoragegr3_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"AzureBlobStoragegr3\""
		},
		"GoogleCloudStorage_Jason_GR3_secretAccessKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"secretAccessKey\"de \"GoogleCloudStorage_Jason_GR3\""
		},
		"Microsoft3651_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"servicePrincipalKey\"de \"Microsoft3651\""
		},
		"Servr_azure_gr3_2024_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"Servr_azure_gr3_2024\""
		},
		"GoogleCloudStorage_Jason_GR3_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "Mati2024*"
		},
		"Microsoft3651_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "jramire91409"
		},
		"Servr_azure_gr3_2024_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "gr3-2024s.database.windows.net"
		},
		"Servr_azure_gr3_2024_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "GR3_2024"
		},
		"Servr_azure_gr3_2024_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Administrador"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ECOMM_1_DIMMENSION_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de dimensiones ECOMM",
				"activities": [
					{
						"name": "DIM_BRAND",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BRAND",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDATOSPRODUCTO": {},
									"DIMBRAND": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_BRAND",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_BEAUTY_CAT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BEAUTY_CAT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_PRODUCTO",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_BEAUTY_CAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DATOSDEPRODUCTO": {},
									"DIMBEAUTYCAT": {},
									"DIMBRAND": {},
									"DIMPRODUCTO": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_EVENT_TYPE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_PRODUCTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_EVENT_TYPE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGEDWHPPTO": {},
									"STAGEEREALSALES": {},
									"DIMEVENTTYPE": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DIM_E_BRAND')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_E_CATEGORY')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_E_BEAUTY_CAT')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_E_PRODUCT')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_E_EVENT_TYPE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOMM_2_FACT_TABLES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FACT_SALES_ECOMM",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FACT_PPTO_ECOMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTSALESECOMM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FACT_PPTO_ECOMM",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTPPTOECOMM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FACT_E_SALES')]",
				"[concat(variables('factoryId'), '/dataflows/FACT_E_PPTO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_FULL_STAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOAD_STAGE_PRODUCT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_PRODUCT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_PPTO_TIENDA_FISICA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_PPTO_TIENDA_FISICA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_ECOMM_PPTO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_PPTO_TIENDA_FISICA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_ECOMM_PPTO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_ECOM_REAL",
						"description": "CARGA DE TODOS LOS STAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_ECOMM_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_ECOM_REAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LOAD_STAGE_PRODUCT')]",
				"[concat(variables('factoryId'), '/pipelines/LOAD_STAGE_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/pipelines/LOAD_STAGE_PPTO_TIENDA_FISICA')]",
				"[concat(variables('factoryId'), '/pipelines/LOAD_STAGE_ECOMM_PPTO')]",
				"[concat(variables('factoryId'), '/pipelines/LOAD_STAGE_ECOM_REAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_STAGE_ECOMM_PPTO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XLS_STG_E_PPTO",
						"description": "Copia del presupuesto desde el XLS al área stage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.Stage_ecom_dwh_ppto",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "fec_ppto_month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fec_ppto_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "imp_precio",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "imp_precio",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_DWH_PPTO_ECOMM",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_DWH_PPTO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_DWH_PPTO_ECOMM')]",
				"[concat(variables('factoryId'), '/datasets/T_STAGE_E_DWH_PPTO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_STAGE_ECOM_REAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XLS_RETAIL_SALES_DEC2019",
						"description": "CARGA DE LOS VALORES REALES AL STAGE DE ECOMM",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.Stage_ecomm_real_sales",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "event_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "user_session",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_session",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_2019_DEC_RETAIL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_RETAIL_SALES_NOV2019",
						"description": "CARGA DE LOS VALORES REALES AL STAGE DE ECOMM",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "XLS_RETAIL_SALES_DEC2019",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "event_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "user_session",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_session",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_2019_NOV_RETAIL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_RETAIL_SALES_OCT2019",
						"description": "CARGA DE LOS VALORES REALES AL STAGE DE ECOMM",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "XLS_RETAIL_SALES_NOV2019",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "event_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "user_session",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_session",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_2019_OCT_RETAIL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_RETAIL_SALES_FEB2020",
						"description": "CARGA DE LOS VALORES REALES AL STAGE DE ECOMM",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "XLS_RETAIL_SALES_OCT2019",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "event_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "user_session",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_session",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_2020_FEB_RETAIL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_RETAIL_SALES_JAN2020",
						"description": "CARGA DE LOS VALORES REALES AL STAGE DE ECOMM",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "XLS_RETAIL_SALES_FEB2020",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "event_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "user_session",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_session",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_2020_JAN_RETAIL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_RETAIL_SALES_JAN2020_copy1",
						"description": "CARGA DE LOS VALORES REALES AL STAGE DE ECOMM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "XLS_RETAIL_SALES_JAN2020",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "event_time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_time",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "event_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "event_type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "user_session",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_session",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_REAL_MES",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/XLS_2019_DEC_RETAIL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/T_STAGE_E_REAL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/XLS_2019_NOV_RETAIL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/XLS_2019_OCT_RETAIL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/XLS_2020_FEB_RETAIL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/XLS_2020_JAN_RETAIL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/XLS_REAL_MES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_STAGE_PPTO_TIENDA_FISICA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XLS_PPTO_SALES_TIENDA_FISICA",
						"description": "Carga desde el excel de ppto_sales_tienda_fisica a el area stage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.stage_ppto_tienda_fisica",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "fec_ppto_month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fec_ppto_month",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Ship Mode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ship_Mode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "imp_ppto_ganancia",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "imp_ppto_ganancia",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "xls_ppto_sales_tienda_fisica",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STG_F_PPTO_TIENDA_FISICA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/xls_ppto_sales_tienda_fisica')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_F_PPTO_TIENDA_FISICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_STAGE_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_ECOM_DATIOS_DE_PRODUCTO",
						"description": "Llenado de la stage de DAGTOS DE PRODUCTO comm desde archivo excel",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.Stage_ecom_DATOS_DE_PRODUCTO",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_id",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "COLUMNA1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Column3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "beauty_category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "beauty_category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "product_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_desc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category_desc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category_desc",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_DATOS_DE_PRODUCTO",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STG_E_DATOS_DE_PRODUCTO",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/XLS_DATOS_DE_PRODUCTO')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_E_DATOS_DE_PRODUCTO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_STAGE_SUPERSTORE_SALES_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "XLS_SUPER_STORE_SALES_DATA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.Stage_Superstore_Sales_Data",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Order ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Order Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order_Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ship Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ship_Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ship Mode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ship_Mode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Postal_Code",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sub-Category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sub_Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sales",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sales",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Discount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Discount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 10,
											"precision": 38
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_SUPER_STORE_SALES_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_SUPER_STORE_SALES_DATA_PEOPLE",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "XLS_SUPER_STORE_SALES_DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.Stage_Superstore_Sales_Data_PEOPLE",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Person",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Person",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_SUPER_STORE_SALES_DATA_PEOPLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STG_F__SUPERSTORE_SALES_DATA_PEOPLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "XLS_SUPER_STORE_SALES_DATA_RETURNS",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "XLS_SUPER_STORE_SALES_DATA_PEOPLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "TRUNCATE TABLE stage.Stage_Superstore_Sales_Data_RETURNS",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Returned",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Returned",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Order ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLS_SUPER_STORE_SALES_DATA_RETURNS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA_RETURNS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/XLS_SUPER_STORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/XLS_SUPER_STORE_SALES_DATA_PEOPLE')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_F__SUPERSTORE_SALES_DATA_PEOPLE')]",
				"[concat(variables('factoryId'), '/datasets/XLS_SUPER_STORE_SALES_DATA_RETURNS')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA_RETURNS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PHYSICAL_1_DIMMENSION_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_F_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SUB_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SUB_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_PRODUCT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SUB_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSUBCATEGORIA": {},
									"DIMPRODUCTO": {},
									"HERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SHIP_MODE",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SHIP_MODE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"STGPPTOTIENDAFISCA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SEGMENT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SHIP_MODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SEGMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_CUSTOMER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"sink1": {},
									"UPDATEFECHAFIN": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION_2STEP",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION_2STEP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"INSERT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CITY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION_2STEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CITY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDIMSALESDATS": {},
									"DIMFREGION": {},
									"dimfcity": {},
									"huerfanos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CUSTOMER",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SEGMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CUSTOMER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {},
									"sink1": {},
									"HUERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DIM_F_CATEGORY')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SUB_CATEGORY')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_PRODUCT')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SHIP_MODE')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SEGMENT')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_REGION')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_REGION_2STEP')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_CITY')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_CUSTOMER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PHYSICAL_2_FACT_TABLES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FACT_F_PPTO",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_F_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGPPTOTIENDAFISICA": {},
									"DIMFSHIPMODE": {},
									"TDIMFREGION": {},
									"FACTPPTOTIENDAFISICA": {},
									"ERROR": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FACT_F_SALES",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FACT_F_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_F_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"RETURNS": {},
									"DIMSHIPMODE": {},
									"TFACTSALESFISICA": {},
									"sink1": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FACT_F_PPTO')]",
				"[concat(variables('factoryId'), '/dataflows/FACT_F_SALES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRUEBAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_F_SEGMENT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SEGMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SEGMENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DWH_PPTO_ECOMM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dwh.ppto_ecomm.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "fec_ppto_month",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "imp_precio",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_BEAUTY_CAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_BEAUTY_CAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_BEAUTY_CAT",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_BEAUTY_CAT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_BRAND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_BRAND",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_BRAND",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_BRAND"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_CATEGORY",
						"type": "decimal",
						"precision": 25,
						"scale": 0
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "CATEGORY_CODE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_CATEGORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_EVENT_TYPE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_EVENT_TYPE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_EVENT_TYPE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_EVENT_TYPE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_CATEGORY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_CATEGORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_CITY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DESC_CITY",
						"type": "char"
					},
					{
						"name": "DESC_STATE",
						"type": "char"
					},
					{
						"name": "DESC_COUNTRY",
						"type": "char"
					},
					{
						"name": "ID_POSTAL_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_REGION",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_CITY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_CUSTOMER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_CUSTOMER",
						"type": "varchar"
					},
					{
						"name": "DESC_CUSTOMER",
						"type": "varchar"
					},
					{
						"name": "ID_SEGMENT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_POSTAL_CODE",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_PRODUCT",
						"type": "varchar"
					},
					{
						"name": "ID_SUBCATEGORY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_PRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_REGION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_REGION",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NAME_REGION",
						"type": "varchar"
					},
					{
						"name": "DESC_MANAGER",
						"type": "varchar"
					},
					{
						"name": "FEC_INI",
						"type": "date"
					},
					{
						"name": "FEC_FIN",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_REGION"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_RETURNED')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_RETURN",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_RETURNED",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_RETURNED"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_SEGMENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_SEGMENT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_SEGMENT",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_SEGMENT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_SHIP_MODE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_SHIP_MODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_SHIP_MODE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_SHIP_MODE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_F_SUB_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DESC_SUB_CATEGORY",
						"type": "varchar"
					},
					{
						"name": "ID_SUBCATEGORY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORY",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_F_SUB_CATEGORY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_DIM_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_PRODUCT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "ID_BEAUTY_CAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_BRAND",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_PRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_ER_DIM_F_CITY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DESC_CITY",
						"type": "varchar"
					},
					{
						"name": "DESC_STATE",
						"type": "varchar"
					},
					{
						"name": "DESC_COUNTRY",
						"type": "varchar"
					},
					{
						"name": "ID_POSTAL_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_REGION",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FECHA_CARGA",
						"type": "timestamp"
					}
				],
				"typeProperties": {
					"schema": "error",
					"table": "ER_DIM_F_CITY"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_ER_DIM_F_CUSTOMER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_CUSTOMER",
						"type": "varchar"
					},
					{
						"name": "DESC_CUSTOMER",
						"type": "varchar"
					},
					{
						"name": "ID_SEGMENT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_POSTAL_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fecha_carga",
						"type": "timestamp"
					}
				],
				"typeProperties": {
					"schema": "error",
					"table": "ER_DIM_F_CUSTOMER"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_ER_DIM_F_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_PRODUCT",
						"type": "varchar"
					},
					{
						"name": "ID_SUBCATEGORY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "FECHA_CARGUE",
						"type": "timestamp"
					}
				],
				"typeProperties": {
					"schema": "error",
					"table": "DIM_F_PRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_ER_DIM_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_PRODUCT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CATEGORY",
						"type": "decimal",
						"precision": 25,
						"scale": 0
					},
					{
						"name": "DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "ID_BEAUTY_CAT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_BRAND",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FECHA_CARGA",
						"type": "timestamp"
					}
				],
				"typeProperties": {
					"schema": "error",
					"table": "DIM_PRODUCT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_ER_FACT_PPTO_FISICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_PRODUCT",
						"type": "char"
					},
					{
						"name": "IMP_PPTO_GANANCIA",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "ID_REGION",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_SHIP_MODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MONTH",
						"type": "char"
					},
					{
						"name": "YEAR",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "error",
					"table": "ER_FACT_PPTO_FISICA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_FACT_PPTO_ECOMM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "MONTH",
						"type": "decimal",
						"precision": 2,
						"scale": 0
					},
					{
						"name": "YEAR",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "ID_PRODUCT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_EVENT_TYPE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRICE",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_PPTO_ECOMM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_FACT_PPTO_FISICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_PRODUCT",
						"type": "varchar"
					},
					{
						"name": "IMP_PPTO_GANANCIA",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "ID_REGION",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_SHIP_MODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MONTH",
						"type": "varchar"
					},
					{
						"name": "YEAR",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_PPTO_FISICA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_FACT_SALES_ECOMM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_USER_SESION",
						"type": "char"
					},
					{
						"name": "ID_PRODUCT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_EVENT_TYPE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRICE",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "ID_USER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EVENT_DATE",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_SALES_ECOMM"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_FACT_SALES_FISICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_ORDER",
						"type": "varchar"
					},
					{
						"name": "ID_PRODUCT",
						"type": "varchar"
					},
					{
						"name": "ORDER_DATE",
						"type": "date"
					},
					{
						"name": "SHIP_DATE",
						"type": "date"
					},
					{
						"name": "ID_SHIP_MODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CUSTOMER",
						"type": "varchar"
					},
					{
						"name": "IMPORTE",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "QUANTITY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DISCOUNT",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "PROFIT",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "ID_RETURNED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRECIO_TOTAL",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_SALES_FISICA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STAGESUPERSTORE_PEOLPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Person",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_Superstore_Sales_Data_people"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STAGE_E_DWH_PPTO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "fec_ppto_month",
						"type": "nvarchar"
					},
					{
						"name": "event_type",
						"type": "varchar"
					},
					{
						"name": "product_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "imp_precio",
						"type": "decimal",
						"precision": 38,
						"scale": 10
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_ecom_dwh_ppto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STAGE_E_REAL_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "event_time",
						"type": "varchar"
					},
					{
						"name": "event_type",
						"type": "varchar"
					},
					{
						"name": "product_id",
						"type": "varchar"
					},
					{
						"name": "category_id",
						"type": "varchar"
					},
					{
						"name": "category_code",
						"type": "varchar"
					},
					{
						"name": "brand",
						"type": "varchar"
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 38,
						"scale": 10
					},
					{
						"name": "user_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "user_session",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_ecomm_real_sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_E_DATOS_DE_PRODUCTO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "product_id",
						"type": "varchar"
					},
					{
						"name": "category_id",
						"type": "varchar"
					},
					{
						"name": "Column3",
						"type": "varchar"
					},
					{
						"name": "category_code",
						"type": "varchar"
					},
					{
						"name": "beauty_category",
						"type": "varchar"
					},
					{
						"name": "brand",
						"type": "varchar"
					},
					{
						"name": "product_desc",
						"type": "varchar"
					},
					{
						"name": "category_desc",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_ecom_DATOS_DE_PRODUCTO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_E_DATOS_DE_P_BEAUTY_CAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Beauty_cat",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_ecom_DATOS_DE_PRODUCTO_beauty_cat"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_E_DATOS_DE_P_BRAND')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Column1",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_ecom_DATOS_DE_PRODUCTO_brand"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_E_DATOS_DE_P_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "category_id",
						"type": "varchar"
					},
					{
						"name": "category_code",
						"type": "varchar"
					},
					{
						"name": "category_desc",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_ecom_DATOS_DE_PRODUCTO_category"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_F_PPTO_TIENDA_FISICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "fec_ppto_month",
						"type": "nvarchar"
					},
					{
						"name": "Ship_Mode",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Product_ID",
						"type": "varchar"
					},
					{
						"name": "imp_ppto_ganancia",
						"type": "decimal",
						"precision": 38,
						"scale": 10
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "stage_ppto_tienda_fisica"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_F_SUPERSTORE_SALES_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Order_ID",
						"type": "varchar"
					},
					{
						"name": "Order_Date",
						"type": "varchar"
					},
					{
						"name": "Ship_Date",
						"type": "varchar"
					},
					{
						"name": "Ship_Mode",
						"type": "varchar"
					},
					{
						"name": "Customer_ID",
						"type": "varchar"
					},
					{
						"name": "Customer_Name",
						"type": "varchar"
					},
					{
						"name": "Segment",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "Postal_Code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Product_ID",
						"type": "varchar"
					},
					{
						"name": "Category",
						"type": "varchar"
					},
					{
						"name": "Sub_Category",
						"type": "varchar"
					},
					{
						"name": "Product_Name",
						"type": "varchar"
					},
					{
						"name": "Sales",
						"type": "decimal",
						"precision": 38,
						"scale": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Discount",
						"type": "decimal",
						"precision": 38,
						"scale": 10
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 38,
						"scale": 10
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_Superstore_Sales_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_F_SUPERSTORE_SALES_DATA_RETURNS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Returned",
						"type": "varchar"
					},
					{
						"name": "Order_ID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_Superstore_Sales_Data_returns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_STG_F__SUPERSTORE_SALES_DATA_PEOPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Person",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "stage",
					"table": "Stage_Superstore_Sales_Data_people"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_2019_DEC_RETAIL_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2019-Dec.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "event_time",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "user_session",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_2019_NOV_RETAIL_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2019-Nov.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "event_time",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "user_session",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_2019_OCT_RETAIL_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2019-Oct.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "event_time",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "user_session",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_2020_FEB_RETAIL_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2020-Feb.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "event_time",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "user_session",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_2020_JAN_RETAIL_SALES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2020-Jan.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "event_time",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "user_session",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_DATOS_DE_PRODUCTO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Hoja1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DATOS DE PRODUCTO.xlsx",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "COLUMNA1",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "beauty_category",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "product_desc",
						"type": "String"
					},
					{
						"name": "category_desc",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_REAL_MES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "REAL_MES.csv",
						"folderPath": "ECOMMERCE",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "event_time",
						"type": "String"
					},
					{
						"name": "event_type",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "category_id",
						"type": "String"
					},
					{
						"name": "category_code",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "user_id",
						"type": "String"
					},
					{
						"name": "user_session",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_SUPER_STORE_SALES_DATA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Orders",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Superstore Sales Data.xlsx",
						"folderPath": "FISICA",
						"container": "contenedor-gr3"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Row ID",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					},
					{
						"name": "Order Date",
						"type": "String"
					},
					{
						"name": "Ship Date",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Customer ID",
						"type": "String"
					},
					{
						"name": "Customer Name",
						"type": "String"
					},
					{
						"name": "Segment",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Sub-Category",
						"type": "String"
					},
					{
						"name": "Product Name",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Discount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_SUPER_STORE_SALES_DATA_PEOPLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "People",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Superstore Sales Data.xlsx",
						"folderPath": "FISICA",
						"container": "contenedor-gr3"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Person",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLS_SUPER_STORE_SALES_DATA_RETURNS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Returns",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Superstore Sales Data.xlsx",
						"folderPath": "FISICA",
						"container": "contenedor-gr3"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Returned",
						"type": "String"
					},
					{
						"name": "Order ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xls_ppto_sales_tienda_fisica')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragegr3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ppto_sales_tienda_fisica.csv",
						"folderPath": "FISICA",
						"container": "contenedor-gr3"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "fec_ppto_month",
						"type": "String"
					},
					{
						"name": "Ship Mode",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Product ID",
						"type": "String"
					},
					{
						"name": "imp_ppto_ganancia",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragegr3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Espacio de almacenamiento con archivos gr3",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStoragegr3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoogleCloudStorage_Jason_GR3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GoogleCloudStorage",
				"typeProperties": {
					"serviceUrl": "https://storage.googleapis.com",
					"accessKeyId": "[parameters('GoogleCloudStorage_Jason_GR3_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('GoogleCloudStorage_Jason_GR3_secretAccessKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Microsoft3651')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Office365",
				"typeProperties": {
					"office365TenantId": "c06fb559-1b68-4b84-a14f-47d0d837a5ab",
					"servicePrincipalTenantId": "c06fb559-1b68-4b84-a14f-47d0d837a5ab",
					"servicePrincipalId": "[parameters('Microsoft3651_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('Microsoft3651_servicePrincipalKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Servr_azure_gr3_2024')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SQL Server 1 Grupo3",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('Servr_azure_gr3_2024_properties_typeProperties_server')]",
					"database": "[parameters('Servr_azure_gr3_2024_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Servr_azure_gr3_2024_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Servr_azure_gr3_2024_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_E_BEAUTY_CAT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_E_DATOS_DE_PRODUCTO",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_BEAUTY_CAT",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          category_id as string,",
						"          Column3 as string,",
						"          category_code as string,",
						"          beauty_category as string,",
						"          brand as string,",
						"          product_desc as string,",
						"          category_desc as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(beauty_category = upper(beauty_category)),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(beauty_category)==false())) ~> Modificarfila1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_BEAUTY_CAT as integer,",
						"          DESC_BEAUTY_CAT as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_BEAUTY_CAT'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_BEAUTY_CAT = beauty_category",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_E_DATOS_DE_PRODUCTO')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_BEAUTY_CAT')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_E_BRAND')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_E_DATOS_DE_PRODUCTO",
								"type": "DatasetReference"
							},
							"name": "STGDATOSPRODUCTO"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_BRAND",
								"type": "DatasetReference"
							},
							"name": "DIMBRAND",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "Modificarfila1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          category_id as string,",
						"          Column3 as string,",
						"          category_code as string,",
						"          beauty_category as string,",
						"          brand as string,",
						"          product_desc as string,",
						"          category_desc as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDATOSPRODUCTO",
						"STGDATOSPRODUCTO aggregate(groupBy(brand = upper(brand)),",
						"     COUNT = count()) ~> aggregate1",
						"aggregate1 alterRow(upsertIf(isNull(brand)==false())) ~> Modificarfila1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_BRAND as integer,",
						"          DESC_BRAND as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_BRAND'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_BRAND = brand",
						"     )) ~> DIMBRAND"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_E_DATOS_DE_PRODUCTO')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_E_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_E_DATOS_DE_PRODUCTO",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          category_id as string,",
						"          Column3 as string,",
						"          category_code as string,",
						"          beauty_category as string,",
						"          brand as string,",
						"          product_desc as string,",
						"          category_desc as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(category_id,",
						"          category_code,",
						"          category_desc),",
						"     COUNT = count()) ~> aggregate2",
						"cast1 alterRow(upsertIf(isNull(category_id)==false())) ~> Modificarfila1",
						"aggregate2 cast(output(",
						"          category_id as long '000,000,000'",
						"     ),",
						"     errors: true) ~> cast1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CATEGORY as decimal(25,0),",
						"          DESCRIPTION as string,",
						"          CATEGORY_CODE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CATEGORY'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_CATEGORY = category_id,",
						"          DESCRIPTION = category_desc,",
						"          CATEGORY_CODE = category_code",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_E_DATOS_DE_PRODUCTO')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_CATEGORY')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_E_EVENT_TYPE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGE_E_DWH_PPTO",
								"type": "DatasetReference"
							},
							"name": "STGEDWHPPTO"
						},
						{
							"dataset": {
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference"
							},
							"name": "STAGEEREALSALES"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "union1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fec_ppto_month as string,",
						"          event_type as string,",
						"          product_id as integer,",
						"          imp_precio as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGEDWHPPTO",
						"source(output(",
						"          event_time as string,",
						"          event_type as string,",
						"          product_id as string,",
						"          category_id as string,",
						"          category_code as string,",
						"          brand as string,",
						"          price as decimal(38,10),",
						"          user_id as integer,",
						"          user_session as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEEREALSALES",
						"union1 aggregate(groupBy(event_type = upper(event_type)),",
						"     COUNT = count()) ~> aggregate1",
						"aggregate1 alterRow(upsertIf(isNull(event_type)==false())) ~> Modificarfila1",
						"select2, select1 union(byName: true)~> union1",
						"STGEDWHPPTO select(mapColumn(",
						"          event_type",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"STAGEEREALSALES select(mapColumn(",
						"          event_type",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_EVENT_TYPE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_EVENT_TYPE = event_type",
						"     )) ~> DIMEVENTTYPE"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STAGE_E_DWH_PPTO')]",
				"[concat(variables('factoryId'), '/datasets/T_STAGE_E_REAL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_EVENT_TYPE')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_E_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_E_DATOS_DE_PRODUCTO",
								"type": "DatasetReference"
							},
							"name": "DATOSDEPRODUCTO"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_BEAUTY_CAT",
								"type": "DatasetReference"
							},
							"name": "DIMBEAUTYCAT"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_BRAND",
								"type": "DatasetReference"
							},
							"name": "DIMBRAND"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_PRODUCT",
								"type": "DatasetReference"
							},
							"name": "DIMPRODUCTO",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_DIM_PRODUCT",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "CONBEAUTY"
						},
						{
							"name": "join1"
						},
						{
							"name": "cast2"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          product_id as string,",
						"          category_id as string,",
						"          Column3 as string,",
						"          category_code as string,",
						"          beauty_category as string,",
						"          brand as string,",
						"          product_desc as string,",
						"          category_desc as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DATOSDEPRODUCTO",
						"source(output(",
						"          ID_BEAUTY_CAT as integer,",
						"          DESC_BEAUTY_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMBEAUTYCAT",
						"source(output(",
						"          ID_BRAND as integer,",
						"          DESC_BRAND as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMBRAND",
						"DATOSDEPRODUCTO, DIMBEAUTYCAT join(upper(beauty_category) == upper(DESC_BEAUTY_CAT),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> CONBEAUTY",
						"CONBEAUTY, DIMBRAND join(upper(brand) == upper(DESC_BRAND),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 cast(output(",
						"          category_id as long '000,000,000'",
						"     ),",
						"     errors: true) ~> cast2",
						"split1@llavesllenas alterRow(upsertIf(isNull(product_id)==false())) ~> Modificarfila1",
						"cast2 split(isNull(ID_BEAUTY_CAT) == false() || isNull(ID_BRAND) == false(),",
						"     disjoint: false) ~> split1@(llavesllenas, llavesnulas)",
						"split1@llavesnulas derive(FECHA_CARGA = currentDate()) ~> derivedColumn1",
						"Modificarfila1 aggregate(groupBy(product_id,",
						"          category_id,",
						"          product_desc,",
						"          ID_BEAUTY_CAT,",
						"          ID_BRAND),",
						"     count = count()) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as integer,",
						"          ID_CATEGORY as integer,",
						"          DESCRIPTION as string,",
						"          ID_BEAUTY_CAT as integer,",
						"          ID_BRAND as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_PRODUCT'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_PRODUCT = product_id,",
						"          ID_CATEGORY = category_id,",
						"          DESCRIPTION = product_desc,",
						"          ID_BEAUTY_CAT,",
						"          ID_BRAND",
						"     )) ~> DIMPRODUCTO",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as integer,",
						"          ID_CATEGORY as decimal(25,0),",
						"          DESCRIPTION as string,",
						"          ID_BEAUTY_CAT as integer,",
						"          ID_BRAND as integer,",
						"          FECHA_CARGA as binary",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_PRODUCT = product_id,",
						"          ID_CATEGORY = category_id,",
						"          DESCRIPTION = product_desc,",
						"          ID_BEAUTY_CAT,",
						"          ID_BRAND,",
						"          FECHA_CARGA",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_E_DATOS_DE_PRODUCTO')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_BEAUTY_CAT')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_BRAND')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_PRODUCT')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]",
				"[concat(variables('factoryId'), '/datasets/T_ER_DIM_PRODUCT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(category = upper(Category)),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(category)==false())) ~> Modificarfila1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CATEGORY as integer,",
						"          DESCRIPTION as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESCRIPTION'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESCRIPTION = category",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_CATEGORY')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_CITY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "STGDIMSALESDATS"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "DIMFREGION"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_CITY",
								"type": "DatasetReference"
							},
							"name": "dimfcity",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_DIM_F_CITY",
								"type": "DatasetReference"
							},
							"name": "huerfanos",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDIMSALESDATS",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFREGION",
						"select1 aggregate(groupBy(City = upper(City),",
						"          State = upper(State),",
						"          Country = upper(Country),",
						"          Postal_Code,",
						"          Region = upper(Region)),",
						"     count = count()) ~> aggregate1",
						"STGDIMSALESDATS select(mapColumn(",
						"          Country,",
						"          City,",
						"          State,",
						"          Postal_Code,",
						"          Region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1, DIMFREGION join(FECHATOREGION >= FEC_INI && (FECHATOREGION <FEC_FIN || isNull(FEC_FIN)== true()) && Region == NAME_REGION,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"split1@llavesllenas alterRow(upsertIf(isNull(Postal_Code)==false())) ~> Modificarfila1",
						"aggregate1 derive(FECHATOREGION = currentDate()) ~> derivedColumn1",
						"join1 split(isNull(ID_REGION) == false(),",
						"     disjoint: false) ~> split1@(llavesllenas, LLAVEREGIONNULL)",
						"split1@LLAVEREGIONNULL derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn2",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DESC_CITY as string,",
						"          DESC_STATE as string,",
						"          DESC_COUNTRY as string,",
						"          ID_POSTAL_CODE as integer,",
						"          ID_REGION as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_POSTAL_CODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_CITY = City,",
						"          DESC_STATE = State,",
						"          DESC_COUNTRY = Country,",
						"          ID_POSTAL_CODE = Postal_Code,",
						"          ID_REGION",
						"     )) ~> dimfcity",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DESC_CITY as string,",
						"          DESC_STATE as string,",
						"          DESC_COUNTRY as string,",
						"          ID_POSTAL_CODE as integer,",
						"          ID_REGION as integer,",
						"          FECHA_CARGA as binary",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_CITY = City,",
						"          DESC_STATE = State,",
						"          DESC_COUNTRY = Country,",
						"          ID_POSTAL_CODE = Postal_Code,",
						"          ID_REGION,",
						"          FECHA_CARGA",
						"     )) ~> huerfanos"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_REGION')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_CITY')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]",
				"[concat(variables('factoryId'), '/datasets/T_ER_DIM_F_CITY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_CUSTOMER')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "SUPERSTORESALESDATA"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SEGMENT",
								"type": "DatasetReference"
							},
							"name": "DIMFSEGMENT"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_CUSTOMER",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_DIM_F_CUSTOMER",
								"type": "DatasetReference"
							},
							"name": "HUERFANOS",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "join1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SUPERSTORESALESDATA",
						"source(output(",
						"          ID_SEGMENT as integer,",
						"          DESC_SEGMENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFSEGMENT",
						"SUPERSTORESALESDATA aggregate(groupBy(Customer_ID,",
						"          Customer_Name = upper(Customer_Name),",
						"          Segment = upper(Segment),",
						"          Postal_Code),",
						"     count = count()) ~> aggregate1",
						"aggregate1, DIMFSEGMENT join(Segment == DESC_SEGMENT,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"split1@LLAVESLLENAS alterRow(upsertIf(isNull(Customer_ID)==false())) ~> Modificarfila1",
						"join1 split(isNull(ID_SEGMENT) == false(),",
						"     disjoint: false) ~> split1@(LLAVESLLENAS, LLAVESNULL)",
						"split1@LLAVESNULL derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CUSTOMER as string,",
						"          DESC_CUSTOMER as string,",
						"          ID_SEGMENT as integer,",
						"          ID_POSTAL_CODE as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     keys:['ID_CUSTOMER'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_CUSTOMER = Customer_ID,",
						"          DESC_CUSTOMER = Customer_Name,",
						"          ID_SEGMENT,",
						"          ID_POSTAL_CODE = Postal_Code",
						"     )) ~> sink1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CUSTOMER as string,",
						"          DESC_CUSTOMER as string,",
						"          ID_SEGMENT as integer,",
						"          ID_POSTAL_CODE as integer,",
						"          fecha_carga as binary",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_CUSTOMER = Customer_ID,",
						"          DESC_CUSTOMER = Customer_Name,",
						"          ID_SEGMENT,",
						"          ID_POSTAL_CODE = Postal_Code,",
						"          fecha_carga = FECHA_CARGA",
						"     )) ~> HUERFANOS"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SEGMENT')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_CUSTOMER')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]",
				"[concat(variables('factoryId'), '/datasets/T_ER_DIM_F_CUSTOMER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_PRODUCT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "SUPERSTORESALESDATA"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SUB_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "DIMFSUBCATEGORIA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_PRODUCT",
								"type": "DatasetReference"
							},
							"name": "DIMPRODUCTO",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_DIM_F_PRODUCT",
								"type": "DatasetReference"
							},
							"name": "HERFANOS",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SUPERSTORESALESDATA",
						"source(output(",
						"          DESC_SUB_CATEGORY as string,",
						"          ID_SUBCATEGORY as integer,",
						"          ID_CATEGORY as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFSUBCATEGORIA",
						"select1, DIMFSUBCATEGORIA join(upper(Sub_Category) == upper(DESC_SUB_CATEGORY),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"aggregate1 alterRow(upsertIf(isNull(Product_ID)==false())) ~> Modificarfila1",
						"SUPERSTORESALESDATA select(mapColumn(",
						"          Product_ID,",
						"          Sub_Category,",
						"          Product_Name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"split1@llavescompletas aggregate(groupBy(Product_ID,",
						"          ID_SUBCATEGORY),",
						"     COUNT = count(),",
						"          Product_Name_2 = max(Product_Name)) ~> aggregate1",
						"join1 split(isNull(ID_SUBCATEGORY) == false(),",
						"     disjoint: false) ~> split1@(llavescompletas, huerfanos)",
						"split1@huerfanos derive(FECHA_CARGUE = currentTimestamp()) ~> derivedColumn1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as string,",
						"          ID_SUBCATEGORY as integer,",
						"          DESCRIPTION as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESCRIPTION'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_PRODUCT = Product_ID,",
						"          ID_SUBCATEGORY,",
						"          DESCRIPTION = Product_Name_2",
						"     )) ~> DIMPRODUCTO",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as string,",
						"          ID_SUBCATEGORY as integer,",
						"          DESCRIPTION as string,",
						"          FECHA_CARGUE as binary",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_PRODUCT = Product_ID,",
						"          ID_SUBCATEGORY,",
						"          DESCRIPTION = Product_Name,",
						"          FECHA_CARGUE",
						"     )) ~> HERFANOS"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SUB_CATEGORY')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_PRODUCT')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]",
				"[concat(variables('factoryId'), '/datasets/T_ER_DIM_F_PRODUCT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_REGION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGESUPERSTORE_PEOLPLE",
								"type": "DatasetReference"
							},
							"name": "superstoresalesdatapeople"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "DIMFREGION1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "UPDATEFECHAFIN",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "SIEXISTE"
						},
						{
							"name": "NOEXISTE"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "NUEVOPERSONA"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "Modificarfila2"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Person as string,",
						"          Region as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> superstoresalesdatapeople",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFREGION1",
						"aggregate1, DIMFREGION1 exists(Region == NAME_REGION,",
						"     negate:false,",
						"     broadcast: 'auto')~> SIEXISTE",
						"aggregate1, DIMFREGION1 exists(upper(Region) == upper(NAME_REGION),",
						"     negate:true,",
						"     broadcast: 'auto')~> NOEXISTE",
						"NOEXISTE derive(ACCION = 'INSERT',",
						"          FECHA_INI = currentDate(),",
						"          FECHA_FIN = '') ~> derivedColumn3",
						"SIEXISTE, DIMFREGION1 exists(Person == DESC_MANAGER,",
						"     negate:true,",
						"     broadcast: 'auto')~> NUEVOPERSONA",
						"NUEVOPERSONA derive(CURRENT_DATE = currentDate()) ~> derivedColumn5",
						"derivedColumn5 alterRow(updateIf(isNull(Region)==false())) ~> Modificarfila2",
						"superstoresalesdatapeople aggregate(groupBy(Person = upper(Person),",
						"          Region = upper(Region)),",
						"     count = count()) ~> aggregate1",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          NAME_REGION = Region,",
						"          DESC_MANAGER = Person,",
						"          FEC_INI = FECHA_INI",
						"     )) ~> sink1",
						"Modificarfila2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['NAME_REGION'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          FEC_FIN = CURRENT_DATE,",
						"          NAME_REGION = Region",
						"     )) ~> UPDATEFECHAFIN"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STAGESUPERSTORE_PEOLPLE')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_REGION')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_REGION_2STEP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGESUPERSTORE_PEOLPLE",
								"type": "DatasetReference"
							},
							"name": "superstoresalesdatapeople"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "DIMFREGION1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "INSERT",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "SIEXISTE"
						},
						{
							"name": "NUEVOPERSONA"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Person as string,",
						"          Region as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> superstoresalesdatapeople",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFREGION1",
						"aggregate1, DIMFREGION1 exists(Region == NAME_REGION,",
						"     negate:false,",
						"     broadcast: 'auto')~> SIEXISTE",
						"SIEXISTE, DIMFREGION1 exists(Person == DESC_MANAGER,",
						"     negate:true,",
						"     broadcast: 'auto')~> NUEVOPERSONA",
						"NUEVOPERSONA derive(CURRENT_DATE = currentDate()) ~> derivedColumn5",
						"superstoresalesdatapeople aggregate(groupBy(Person = upper(Person),",
						"          Region = upper(Region)),",
						"     count = count()) ~> aggregate1",
						"derivedColumn5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          NAME_REGION = Region,",
						"          DESC_MANAGER = Person,",
						"          FEC_INI = CURRENT_DATE",
						"     )) ~> INSERT"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STAGESUPERSTORE_PEOLPLE')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_REGION')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_RETURNED')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA_RETURNS",
								"type": "DatasetReference"
							},
							"name": "STGSUPERSTORESALESDATARETURNED"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_RETURNED",
								"type": "DatasetReference"
							},
							"name": "DIMFRETURNED",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Returned as string,",
						"          Order_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSUPERSTORESALESDATARETURNED",
						"STGSUPERSTORESALESDATARETURNED aggregate(groupBy(Returned),",
						"     COUNT = count()) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_RETURN as integer,",
						"          DESC_RETURNED as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_RETURNED = Returned",
						"     )) ~> DIMFRETURNED"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA_RETURNS')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_RETURNED')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_SEGMENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "STGFSUPERSTORESALESDATA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_SEGMENT",
								"type": "DatasetReference"
							},
							"name": "DIMFSEGMENT",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGFSUPERSTORESALESDATA",
						"STGFSUPERSTORESALESDATA aggregate(groupBy(Segment = upper(Segment)),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(Segment)==false())) ~> Modificarfila1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_SEGMENT as integer,",
						"          DESC_SEGMENT as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_SEGMENT'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_SEGMENT = Segment",
						"     )) ~> DIMFSEGMENT"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SEGMENT')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_SHIP_MODE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "STGFSUPERSTORESALESDATA"
						},
						{
							"dataset": {
								"referenceName": "T_STG_F_PPTO_TIENDA_FISICA",
								"type": "DatasetReference"
							},
							"name": "STGPPTOTIENDAFISCA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_SHIP_MODE",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGFSUPERSTORESALESDATA",
						"source(output(",
						"          fec_ppto_month as string,",
						"          Ship_Mode as string,",
						"          Region as string,",
						"          Product_ID as string,",
						"          imp_ppto_ganancia as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPPTOTIENDAFISCA",
						"union1 aggregate(groupBy(ship_mode = upper(Ship_Mode)),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(ship_mode)==false())) ~> Modificarfila1",
						"STGFSUPERSTORESALESDATA select(mapColumn(",
						"          Ship_Mode",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"STGPPTOTIENDAFISCA select(mapColumn(",
						"          Ship_Mode",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1, select2 union(byName: true)~> union1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_SHIP_MODE as integer,",
						"          DESC_SHIP_MODE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_SHIP_MODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_SHIP_MODE = ship_mode",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_F_PPTO_TIENDA_FISICA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SHIP_MODE')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_SUB_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_SUB_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          ID_CATEGORY as integer,",
						"          DESCRIPTION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"join1 aggregate(groupBy(SUB_CATEGORY = upper(Sub_Category),",
						"          ID_CATEGORY),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(SUB_CATEGORY)==false())) ~> Modificarfila1",
						"source1, source2 join(upper(Category) == upper(DESCRIPTION),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DESC_SUB_CATEGORY as string,",
						"          ID_SUBCATEGORY as integer,",
						"          ID_CATEGORY as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_SUB_CATEGORY'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          DESC_SUB_CATEGORY = SUB_CATEGORY,",
						"          ID_CATEGORY",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_CATEGORY')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SUB_CATEGORY')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_E_PPTO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGE_E_DWH_PPTO",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_PPTO_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTPPTOECOMM",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "MONTHANDYEAR"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fec_ppto_month as string,",
						"          event_type as string,",
						"          product_id as integer,",
						"          imp_precio as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"aggregate1, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"STAGEREALSALES derive(YEAR = left(fec_ppto_month,4),",
						"          MONTH = right(fec_ppto_month,2)) ~> MONTHANDYEAR",
						"MONTHANDYEAR aggregate(groupBy(YEAR,",
						"          MONTH,",
						"          product_id,",
						"          event_type),",
						"     IMPORTE_PRECIO = sum(imp_precio)) ~> aggregate1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          MONTH as decimal(2,0),",
						"          YEAR as decimal(4,0),",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          MONTH,",
						"          YEAR,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = IMPORTE_PRECIO",
						"     )) ~> FACTPPTOECOMM"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STAGE_E_DWH_PPTO')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_EVENT_TYPE')]",
				"[concat(variables('factoryId'), '/datasets/T_FACT_PPTO_ECOMM')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_E_SALES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_SALES_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTSALESECOMM",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          event_time as string,",
						"          event_type as string,",
						"          product_id as string,",
						"          category_id as string,",
						"          category_code as string,",
						"          brand as string,",
						"          price as decimal(38,10),",
						"          user_id as integer,",
						"          user_session as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"aggregate1, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"STAGEREALSALES derive(FECHA = left(event_time,10),",
						"          user_session_NULL = coalesce(user_session,\"NA\")) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          product_id as integer '000',",
						"          FECHA as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"select1 aggregate(groupBy(event_type,",
						"          product_id,",
						"          user_session,",
						"          user_id,",
						"          FECHA),",
						"     price = sum(price)) ~> aggregate1",
						"cast1 select(mapColumn(",
						"          event_type,",
						"          product_id,",
						"          price,",
						"          user_id,",
						"          user_session = user_session_NULL,",
						"          FECHA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_USER_SESION as string,",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          ID_USER as integer,",
						"          EVENT_DATE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_USER_SESION = user_session,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = price,",
						"          ID_USER = user_id,",
						"          EVENT_DATE = FECHA",
						"     )) ~> FACTSALESECOMM"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STAGE_E_REAL_SALES')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_EVENT_TYPE')]",
				"[concat(variables('factoryId'), '/datasets/T_FACT_SALES_ECOMM')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_F_PPTO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_PPTO_TIENDA_FISICA",
								"type": "DatasetReference"
							},
							"name": "STGPPTOTIENDAFISICA"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SHIP_MODE",
								"type": "DatasetReference"
							},
							"name": "DIMFSHIPMODE"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "TDIMFREGION"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_PPTO_FISICA",
								"type": "DatasetReference"
							},
							"name": "FACTPPTOTIENDAFISICA",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_FACT_PPTO_FISICA",
								"type": "DatasetReference"
							},
							"name": "ERROR"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "cast1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fec_ppto_month as string,",
						"          Ship_Mode as string,",
						"          Region as string,",
						"          Product_ID as string,",
						"          imp_ppto_ganancia as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPPTOTIENDAFISICA",
						"source(output(",
						"          ID_SHIP_MODE as integer,",
						"          DESC_SHIP_MODE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFSHIPMODE",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TDIMFREGION",
						"STGPPTOTIENDAFISICA derive(YEAR = left(fec_ppto_month,4),",
						"          MONTH = right(fec_ppto_month,2)) ~> derivedColumn1",
						"derivedColumn2 aggregate(groupBy(Product_ID,",
						"          Region = upper(Region),",
						"          Ship_Mode = upper(Ship_Mode),",
						"          YEAR,",
						"          MONTH,",
						"          FECHATOREGION),",
						"     IMPORTE_PPTO_GANANCIA = sum(imp_ppto_ganancia)) ~> aggregate1",
						"aggregate1, DIMFSHIPMODE join(Ship_Mode == DESC_SHIP_MODE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"cast1, TDIMFREGION join(FECHATOREGION >= FEC_INI && (FECHATOREGION <FEC_FIN || isNull(FEC_FIN)== true()) && Region == NAME_REGION,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"derivedColumn1 derive(FECHATOREGION = concat(YEAR,'-',MONTH,'-01')) ~> derivedColumn2",
						"join1 cast(output(",
						"          FECHATOREGION as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"join2 split(isNull(ID_SHIP_MODE) == false() || isNull(ID_REGION)==false(),",
						"     disjoint: false) ~> split1@(LlavesLlenas, llavesNULL)",
						"split1@llavesNULL derive(FECHA = currentUTC()) ~> derivedColumn3",
						"split1@LlavesLlenas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as string,",
						"          IMP_PPTO_GANANCIA as decimal(24,10),",
						"          ID_REGION as integer,",
						"          ID_SHIP_MODE as integer,",
						"          MONTH as string,",
						"          YEAR as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_PRODUCT = Product_ID,",
						"          IMP_PPTO_GANANCIA = IMPORTE_PPTO_GANANCIA,",
						"          ID_REGION,",
						"          ID_SHIP_MODE,",
						"          MONTH,",
						"          YEAR",
						"     )) ~> FACTPPTOTIENDAFISICA",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as string,",
						"          IMP_PPTO_GANANCIA as decimal(24,10),",
						"          ID_REGION as integer,",
						"          ID_SHIP_MODE as integer,",
						"          MONTH as string,",
						"          YEAR as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ERROR"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_PPTO_TIENDA_FISICA')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SHIP_MODE')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_REGION')]",
				"[concat(variables('factoryId'), '/datasets/T_FACT_PPTO_FISICA')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]",
				"[concat(variables('factoryId'), '/datasets/T_ER_FACT_PPTO_FISICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_F_SALES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA_RETURNS",
								"type": "DatasetReference"
							},
							"name": "RETURNS"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SHIP_MODE",
								"type": "DatasetReference"
							},
							"name": "DIMSHIPMODE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_SALES_FISICA",
								"type": "DatasetReference"
							},
							"name": "TFACTSALESFISICA",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_FCAT_SALES_FISICA",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "RETURNS1"
						},
						{
							"name": "join2"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "cast1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          Returned as string,",
						"          Order_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> RETURNS",
						"source(output(",
						"          ID_SHIP_MODE as integer,",
						"          DESC_SHIP_MODE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMSHIPMODE",
						"source1 select(mapColumn(",
						"          Order_ID,",
						"          Order_Date,",
						"          Ship_Date,",
						"          Ship_Mode,",
						"          Customer_ID,",
						"          Product_ID,",
						"          Importe = Sales,",
						"          Quantity,",
						"          Discount,",
						"          Profit",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 filter(isNull(Order_ID)==false() && isNull(Quantity)==false() && Quantity >=1 && isNull(Product_ID)==false() && isNull(Customer_ID)==false() && filtrofecha == 1) ~> filter1",
						"select1 derive(filtrofecha = iif(Order_Date>Ship_Date,0,1),",
						"          Precio_Total = Importe*Quantity) ~> derivedColumn1",
						"filter1, RETURNS join(select1@Order_ID == RETURNS@Order_ID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> RETURNS1",
						"RETURNS1, DIMSHIPMODE join(upper(Ship_Mode) == upper(DESC_SHIP_MODE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"derivedColumn2 aggregate(groupBy(Order_ID = upper(select1@Order_ID),",
						"          Product_ID = upper(Product_ID),",
						"          Order_Date,",
						"          Ship_Date,",
						"          ID_SHIP_MODE,",
						"          Customer_ID = upper(Customer_ID),",
						"          Returned = upper(Returned),",
						"          ID_RETURNED),",
						"     Importe = sum(Importe),",
						"          Quantity = sum(Quantity),",
						"          Discount = sum(Discount),",
						"          Profit = sum(Profit),",
						"          Precio_Total = sum(Precio_Total)) ~> aggregate1",
						"join2 derive(ID_RETURNED = iif(upper(Returned)=='YES',1,0)) ~> derivedColumn2",
						"aggregate1 cast(output(",
						"          Order_Date as date 'yyyy-MM-dd',",
						"          Ship_Date as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 split(isNull(ID_SHIP_MODE) == false(),",
						"     disjoint: false) ~> split1@(LLAVESOK, HUERFANOS)",
						"split1@HUERFANOS derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn3",
						"split1@LLAVESOK sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_ORDER as string,",
						"          ID_PRODUCT as string,",
						"          ORDER_DATE as date,",
						"          SHIP_DATE as date,",
						"          ID_SHIP_MODE as integer,",
						"          ID_CUSTOMER as string,",
						"          IMPORTE as decimal(24,10),",
						"          QUANTITY as integer,",
						"          DISCOUNT as decimal(24,10),",
						"          PROFIT as decimal(24,10),",
						"          ID_RETURNED as integer,",
						"          PRECIO_TOTAL as decimal(24,10)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_ORDER = Order_ID,",
						"          ID_PRODUCT = Product_ID,",
						"          ORDER_DATE = Order_Date,",
						"          SHIP_DATE = Ship_Date,",
						"          ID_SHIP_MODE,",
						"          ID_CUSTOMER = Customer_ID,",
						"          IMPORTE = Importe,",
						"          QUANTITY = Quantity,",
						"          DISCOUNT = Discount,",
						"          PROFIT = Profit,",
						"          ID_RETURNED,",
						"          PRECIO_TOTAL = Precio_Total",
						"     )) ~> TFACTSALESFISICA",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_ORDER as string,",
						"          ID_PRODUCT as string,",
						"          ORDER_DATE as date,",
						"          SHIP_DATE as date,",
						"          ID_SHIP_MODE as integer,",
						"          ID_CUSTOMER as string,",
						"          IMPORTE as decimal(24,10),",
						"          QUANTITY as integer,",
						"          DISCOUNT as decimal(24,10),",
						"          PROFIT as decimal(24,10),",
						"          ID_RETURNED as integer,",
						"          PRECIO_TOTAL as decimal(24,10),",
						"          FECHA_CARGA as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID_ORDER = Order_ID,",
						"          ID_PRODUCT = Product_ID,",
						"          ORDER_DATE = Order_Date,",
						"          SHIP_DATE = Ship_Date,",
						"          ID_SHIP_MODE,",
						"          ID_CUSTOMER = Customer_ID,",
						"          IMPORTE = Importe,",
						"          QUANTITY = Quantity,",
						"          DISCOUNT = Discount,",
						"          PROFIT = Profit,",
						"          ID_RETURNED,",
						"          PRECIO_TOTAL = Precio_Total,",
						"          FECHA_CARGA",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA')]",
				"[concat(variables('factoryId'), '/datasets/T_STG_F_SUPERSTORE_SALES_DATA_RETURNS')]",
				"[concat(variables('factoryId'), '/datasets/T_DIM_F_SHIP_MODE')]",
				"[concat(variables('factoryId'), '/datasets/T_FACT_SALES_FISICA')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragegr3')]",
				"[concat(variables('factoryId'), '/datasets/T_ER_FCAT_SALES_FISICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_ER_FCAT_SALES_FISICA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Servr_azure_gr3_2024",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID_ORDER",
						"type": "varchar"
					},
					{
						"name": "ID_PRODUCT",
						"type": "varchar"
					},
					{
						"name": "ORDER_DATE",
						"type": "date"
					},
					{
						"name": "SHIP_DATE",
						"type": "date"
					},
					{
						"name": "ID_SHIP_MODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_CUSTOMER",
						"type": "varchar"
					},
					{
						"name": "IMPORTE",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "QUANTITY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DISCOUNT",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "PROFIT",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "ID_RETURNED",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRECIO_TOTAL",
						"type": "decimal",
						"precision": 24,
						"scale": 10
					},
					{
						"name": "FECHA_CARGA",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "error",
					"table": "FACT_SALES_FISICA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Servr_azure_gr3_2024')]"
			]
		}
	]
}