{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "DFGR03-2024"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_SEGMENT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "STGFSUPERSTORESALESDATA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_SEGMENT",
								"type": "DatasetReference"
							},
							"name": "DIMFSEGMENT"
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGFSUPERSTORESALESDATA",
						"STGFSUPERSTORESALESDATA aggregate(groupBy(Segment = upper(Segment)),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(Segment)==false())) ~> Modificarfila1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_SEGMENT as integer,",
						"          DESC_SEGMENT as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_SEGMENT'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DESC_SEGMENT = Segment",
						"     )) ~> DIMFSEGMENT"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_SHIP_MODE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "STGFSUPERSTORESALESDATA"
						},
						{
							"dataset": {
								"referenceName": "T_STG_F_PPTO_TIENDA_FISICA",
								"type": "DatasetReference"
							},
							"name": "STGPPTOTIENDAFISCA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_SHIP_MODE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGFSUPERSTORESALESDATA",
						"source(output(",
						"          fec_ppto_month as string,",
						"          Ship_Mode as string,",
						"          Region as string,",
						"          Product_ID as string,",
						"          imp_ppto_ganancia as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPPTOTIENDAFISCA",
						"union1 aggregate(groupBy(ship_mode = upper(Ship_Mode)),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(ship_mode)==false())) ~> Modificarfila1",
						"STGFSUPERSTORESALESDATA select(mapColumn(",
						"          Ship_Mode",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"STGPPTOTIENDAFISCA select(mapColumn(",
						"          Ship_Mode",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1, select2 union(byName: true)~> union1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_SHIP_MODE as integer,",
						"          DESC_SHIP_MODE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_SHIP_MODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DESC_SHIP_MODE = ship_mode",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_SUB_CATEGORY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de la DIM_BRAND",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_SUB_CATEGORY",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate2"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          ID_CATEGORY as integer,",
						"          DESCRIPTION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"join1 aggregate(groupBy(SUB_CATEGORY = upper(Sub_Category),",
						"          ID_CATEGORY),",
						"     COUNT = count()) ~> aggregate2",
						"aggregate2 alterRow(upsertIf(isNull(SUB_CATEGORY)==false())) ~> Modificarfila1",
						"source1, source2 join(upper(Category) == upper(DESCRIPTION),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DESC_SUB_CATEGORY as string,",
						"          ID_SUBCATEGORY as integer,",
						"          ID_CATEGORY as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['DESC_SUB_CATEGORY'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DESC_SUB_CATEGORY = SUB_CATEGORY,",
						"          ID_CATEGORY",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_E_PPTO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGE_E_DWH_PPTO",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_PPTO_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTPPTOECOMM"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "MONTHANDYEAR"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          fec_ppto_month as string,",
						"          event_type as string,",
						"          product_id as integer,",
						"          imp_precio as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"aggregate1, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"STAGEREALSALES derive(YEAR = left(fec_ppto_month,4),",
						"          MONTH = right(fec_ppto_month,2)) ~> MONTHANDYEAR",
						"MONTHANDYEAR aggregate(groupBy(YEAR,",
						"          MONTH,",
						"          product_id,",
						"          event_type),",
						"     IMPORTE_PRECIO = sum(imp_precio)) ~> aggregate1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          MONTH as decimal(2,0),",
						"          YEAR as decimal(4,0),",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          MONTH,",
						"          YEAR,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = IMPORTE_PRECIO",
						"     )) ~> FACTPPTOECOMM"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FACT_E_SALES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_SALES_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTSALESECOMM"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          event_time as string,",
						"          event_type as string,",
						"          product_id as string,",
						"          category_id as string,",
						"          category_code as string,",
						"          brand as string,",
						"          price as decimal(38,10),",
						"          user_id as integer,",
						"          user_session as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"aggregate1, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"STAGEREALSALES derive(FECHA = left(event_time,10)) ~> derivedColumn1",
						"derivedColumn1 cast(output(",
						"          product_id as integer '000',",
						"          FECHA as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"select1 aggregate(groupBy(event_type,",
						"          product_id,",
						"          user_session,",
						"          user_id,",
						"          FECHA),",
						"     price = sum(price)) ~> aggregate1",
						"cast1 select(mapColumn(",
						"          event_type,",
						"          product_id,",
						"          price,",
						"          user_id,",
						"          user_session,",
						"          FECHA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_USER_SESION as string,",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          ID_USER as integer,",
						"          EVENT_DATE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID_USER_SESION = user_session,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = price,",
						"          ID_USER = user_id,",
						"          EVENT_DATE = FECHA",
						"     )) ~> FACTSALESECOMM"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOMM_1_DIMMENSION_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de dimensiones ECOMM",
				"activities": [
					{
						"name": "DIM_BRAND",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BRAND",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDATOSPRODUCTO": {},
									"DIMBRAND": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_BRAND",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_BEAUTY_CAT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BEAUTY_CAT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_PRODUCTO",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_BEAUTY_CAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DATOSDEPRODUCTO": {},
									"DIMBEAUTYCAT": {},
									"DIMBRAND": {},
									"DIMPRODUCTO": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_EVENT_TYPE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_PRODUCTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_EVENT_TYPE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGEDWHPPTO": {},
									"STAGEEREALSALES": {},
									"DIMEVENTTYPE": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOMM_2_FACT_TABLES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FACT_SALES_ECOMM",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FACT_PPTO_ECOMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTSALESECOMM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FACT_PPTO_ECOMM",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTPPTOECOMM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FACT_E_SALES')]",
				"[concat(variables('factoryId'), '/dataflows/FACT_E_PPTO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_FULL_STAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOAD_STAGE_PRODUCT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_PRODUCT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_PPTO_TIENDA_FISICA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_PPTO_TIENDA_FISICA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_ECOMM_PPTO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_PPTO_TIENDA_FISICA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_ECOMM_PPTO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_ECOM_REAL",
						"description": "CARGA DE TODOS LOS STAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_ECOMM_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_ECOM_REAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PHYSICAL_1_DIMMENSION_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_F_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SUB_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SUB_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_PRODUCT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_SUB_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_PRODUCT_fail",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSUBCATEGORIA": {},
									"DIMPRODUCTO": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SHIP_MODE",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SHIP_MODE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"STGPPTOTIENDAFISCA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SEGMENT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SHIP_MODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SEGMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_CUSTOMER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"sink1": {},
									"UPDATEFECHAFIN": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION_2STEP",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION_2STEP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"INSERT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CITY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION_2STEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CITY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDIMSALESDATS": {},
									"DIMFREGION": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CUSTOMER",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SEGMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CUSTOMER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SUB_CATEGORY')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SHIP_MODE')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_SEGMENT')]"
			]
		}
	]
}