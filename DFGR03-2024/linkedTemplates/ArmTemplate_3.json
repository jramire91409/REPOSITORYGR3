{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "DFGR03-2024"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FACT_E_SALES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STAGE_E_REAL_SALES",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_SALES_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTSALESECOMM"
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          event_time as string,",
						"          event_type as string,",
						"          product_id as string,",
						"          category_id as string,",
						"          category_code as string,",
						"          brand as string,",
						"          price as decimal(38,10),",
						"          user_id as integer,",
						"          user_session as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"STAGEREALSALES, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_ROW as integer,",
						"          ID_USER_SESION as string,",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          ID_USER as integer,",
						"          EVENT_TIME as binary",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID_USER_SESION = user_session,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = price,",
						"          ID_USER = user_id,",
						"          EVENT_TIME = event_time",
						"     )) ~> FACTSALESECOMM"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_CUSTOMER_nop')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SEGMENT",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_CUSTOMER",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "Modificarfila1"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          ID_SEGMENT as integer,",
						"          DESC_SEGMENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"source1 select(mapColumn(",
						"          Customer_ID,",
						"          Customer_Name,",
						"          Segment,",
						"          Postal_Code",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1, source2 join(fuzzyCompare(Segment, DESC_SEGMENT, 80.00),",
						"     joinType:'left',",
						"     matchType:'fuzzy',",
						"     ignoreSpaces: false,",
						"     broadcast: 'off')~> join1",
						"aggregate1 alterRow(upsertIf(isNull(Customer_ID))) ~> Modificarfila1",
						"join1 aggregate(groupBy(Customer_ID,",
						"          Customer_Name,",
						"          ID_SEGMENT),",
						"     COUNT = count()) ~> aggregate1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CUSTOMER as string,",
						"          DESC_CUSTOMER as string,",
						"          ID_SEGMENT as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CUSTOMER'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID_CUSTOMER = Customer_ID,",
						"          DESC_CUSTOMER = Customer_Name,",
						"          ID_SEGMENT",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_RETURNED')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA_RETURNS",
								"type": "DatasetReference"
							},
							"name": "STGSUPERSTORESALESDATARETURNED"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference"
							},
							"name": "DIMFRETURNED"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Returned as string,",
						"          Order_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSUPERSTORESALESDATARETURNED",
						"STGSUPERSTORESALESDATARETURNED aggregate(groupBy(Returned),",
						"     COUNT = count()) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_RETURN as integer,",
						"          DESC_RETURNED as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DESC_RETURNED = Returned",
						"     )) ~> DIMFRETURNED"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_REGION')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "stagesuperstoresalesdatapeople",
								"type": "DatasetReference"
							},
							"name": "superstoresalesdatapeople"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "DIMFREGION1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "UPDATEFECHAFIN"
						}
					],
					"transformations": [
						{
							"name": "SIEXISTE"
						},
						{
							"name": "NOEXISTE"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "NUEVOPERSONA"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "Modificarfila2"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Person as string,",
						"          Region as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> superstoresalesdatapeople",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFREGION1",
						"aggregate1, DIMFREGION1 exists(Region == NAME_REGION,",
						"     negate:false,",
						"     broadcast: 'auto')~> SIEXISTE",
						"aggregate1, DIMFREGION1 exists(upper(Region) == upper(NAME_REGION),",
						"     negate:true,",
						"     broadcast: 'auto')~> NOEXISTE",
						"NOEXISTE derive(ACCION = 'INSERT',",
						"          FECHA_INI = currentDate(),",
						"          FECHA_FIN = '') ~> derivedColumn3",
						"SIEXISTE, DIMFREGION1 exists(Person == DESC_MANAGER,",
						"     negate:true,",
						"     broadcast: 'auto')~> NUEVOPERSONA",
						"NUEVOPERSONA derive(CURRENT_DATE = currentDate()) ~> derivedColumn5",
						"derivedColumn5 alterRow(updateIf(isNull(Region)==false())) ~> Modificarfila2",
						"superstoresalesdatapeople aggregate(groupBy(Person = upper(Person),",
						"          Region = upper(Region)),",
						"     count = count()) ~> aggregate1",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          NAME_REGION = Region,",
						"          DESC_MANAGER = Person,",
						"          FEC_INI = FECHA_INI",
						"     )) ~> sink1",
						"Modificarfila2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['NAME_REGION'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          FEC_FIN = CURRENT_DATE,",
						"          NAME_REGION = Region",
						"     )) ~> UPDATEFECHAFIN"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_REGION_2STEP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "stagesuperstoresalesdatapeople",
								"type": "DatasetReference"
							},
							"name": "superstoresalesdatapeople"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "DIMFREGION1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "INSERT"
						}
					],
					"transformations": [
						{
							"name": "SIEXISTE"
						},
						{
							"name": "NUEVOPERSONA"
						},
						{
							"name": "derivedColumn5"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Person as string,",
						"          Region as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> superstoresalesdatapeople",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFREGION1",
						"aggregate1, DIMFREGION1 exists(Region == NAME_REGION,",
						"     negate:false,",
						"     broadcast: 'auto')~> SIEXISTE",
						"SIEXISTE, DIMFREGION1 exists(Person == DESC_MANAGER,",
						"     negate:true,",
						"     broadcast: 'auto')~> NUEVOPERSONA",
						"NUEVOPERSONA derive(CURRENT_DATE = currentDate()) ~> derivedColumn5",
						"superstoresalesdatapeople aggregate(groupBy(Person = upper(Person),",
						"          Region = upper(Region)),",
						"     count = count()) ~> aggregate1",
						"derivedColumn5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          NAME_REGION = Region,",
						"          DESC_MANAGER = Person,",
						"          FEC_INI = CURRENT_DATE",
						"     )) ~> INSERT"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_F_CITY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
								"type": "DatasetReference"
							},
							"name": "STGDIMSALESDATS"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "DIMFREGION"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DIMFCITY",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "Modificarfila1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Order_ID as string,",
						"          Order_Date as string,",
						"          Ship_Date as string,",
						"          Ship_Mode as string,",
						"          Customer_ID as string,",
						"          Customer_Name as string,",
						"          Segment as string,",
						"          Country as string,",
						"          City as string,",
						"          State as string,",
						"          Postal_Code as integer,",
						"          Region as string,",
						"          Product_ID as string,",
						"          Category as string,",
						"          Sub_Category as string,",
						"          Product_Name as string,",
						"          Sales as decimal(38,10),",
						"          Quantity as integer,",
						"          Discount as decimal(38,10),",
						"          Profit as decimal(38,10)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDIMSALESDATS",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFREGION",
						"select1 aggregate(groupBy(City = upper(City),",
						"          State = upper(State),",
						"          Country = upper(Country),",
						"          Postal_Code,",
						"          Region = upper(Region)),",
						"     count = count()) ~> aggregate1",
						"STGDIMSALESDATS select(mapColumn(",
						"          Country,",
						"          City,",
						"          State,",
						"          Postal_Code,",
						"          Region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"aggregate1, DIMFREGION join(Region == NAME_REGION,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 alterRow(upsertIf(isNull(Postal_Code))) ~> Modificarfila1",
						"Modificarfila1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DESC_CITY as string,",
						"          DESC_STATE as string,",
						"          DESC_COUNTRY as string,",
						"          ID_POSTAL_CODE as string,",
						"          ID_REGION as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_POSTAL_CODE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          DESC_CITY = City,",
						"          DESC_STATE = State,",
						"          DESC_COUNTRY = Country,",
						"          ID_POSTAL_CODE = Postal_Code,",
						"          ID_REGION",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOMM_1_DIMMENSION_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de dimensiones ECOMM",
				"activities": [
					{
						"name": "DIM_BRAND",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BRAND",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDATOSPRODUCTO": {},
									"DIMBRAND": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_BRAND",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_BEAUTY_CAT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BEAUTY_CAT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_PRODUCTO",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_BEAUTY_CAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DATOSDEPRODUCTO": {},
									"DIMBEAUTYCAT": {},
									"DIMBRAND": {},
									"DIMPRODUCTO": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_EVENT_TYPE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_PRODUCTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_EVENT_TYPE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGEDWHPPTO": {},
									"STAGEEREALSALES": {},
									"DIMEVENTTYPE": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECOMM_2_FACT_TABLES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FACT_SALES_ECOMM",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTSALESECOMM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FACT_PPTO_ECOMM",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FACT_SALES_ECOMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTPPTOECOMM": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/FACT_E_SALES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LOAD_FULL_STAGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LOAD_STAGE_PRODUCT",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_PRODUCT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_PPTO_TIENDA_FISICA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_SUPERSTORE_SALES_DATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_PPTO_TIENDA_FISICA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_ECOMM_PPTO",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_PPTO_TIENDA_FISICA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_ECOMM_PPTO",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LOAD_STAGE_ECOM_REAL",
						"description": "CARGA DE TODOS LOS STAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LOAD_STAGE_ECOMM_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LOAD_STAGE_ECOM_REAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PHYSICAL_1_DIMMENSION_LOAD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_F_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SUB_CATEGORY",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SUB_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_PRODUCT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SUB_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_PRODUCT_fail",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSUBCATEGORIA": {},
									"DIMPRODUCTO": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SHIP_MODE",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SHIP_MODE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"STGPPTOTIENDAFISCA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SEGMENT",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SHIP_MODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SEGMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"sink1": {}
								},
								"linkedServiceParameters": {}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CUSTOMER_nop",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_SEGMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CUSTOMER_nop",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_CUSTOMER_nop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"sink1": {},
									"UPDATEFECHAFIN": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION_2STEP",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION_2STEP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"INSERT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DIM_F_CUSTOMER_nop')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_REGION')]",
				"[concat(variables('factoryId'), '/dataflows/DIM_F_REGION_2STEP')]"
			]
		}
	]
}