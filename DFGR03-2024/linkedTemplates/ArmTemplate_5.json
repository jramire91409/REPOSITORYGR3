{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "DFGR03-2024"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HUER_FACT_E_PPTO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_ER_FACT_PPTO_ECPOM",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_PPTO_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTPPTOECOMM",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_FACT_PPTO_ECPOM",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          MONTH as decimal(2,0),",
						"          YEAR as decimal(4,0),",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          FECHA_CARGA as string,",
						"          DESC_EVENT_TYPE_H as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"aggregate1, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"select1 aggregate(groupBy(YEAR,",
						"          MONTH,",
						"          product_id,",
						"          event_type),",
						"     IMPORTE_PRECIO = sum(imp_precio)) ~> aggregate1",
						"join1 split(isNull(ID_EVENT_TYPE) == false(),",
						"     disjoint: false) ~> split1@(LLAVESLLENAS, HUERFANOS)",
						"split1@HUERFANOS derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn1",
						"STAGEREALSALES select(mapColumn(",
						"          MONTH,",
						"          YEAR,",
						"          event_type = DESC_EVENT_TYPE_H,",
						"          product_id = ID_PRODUCT,",
						"          imp_precio = PRICE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"split1@LLAVESLLENAS sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          MONTH as decimal(2,0),",
						"          YEAR as decimal(4,0),",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          MONTH,",
						"          YEAR,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = IMPORTE_PRECIO",
						"     )) ~> FACTPPTOECOMM",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          MONTH as decimal(2,0),",
						"          YEAR as decimal(4,0),",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          FECHA_CARGA as string,",
						"          DESC_EVENT_TYPE_H as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          MONTH,",
						"          YEAR,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = IMPORTE_PRECIO,",
						"          FECHA_CARGA,",
						"          DESC_EVENT_TYPE_H = DESC_EVENT_TYPE",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUER_FACT_E_SALES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_ER_FACT_SALES_ECOM",
								"type": "DatasetReference"
							},
							"name": "STAGEREALSALES"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_EVENT_TYPE",
								"type": "DatasetReference"
							},
							"name": "DIMEVENTTYPE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_SALES_ECOMM",
								"type": "DatasetReference"
							},
							"name": "FACTSALESECOMM",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_FACT_SALES_ECOM",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "select1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_USER_SESION as string,",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          ID_USER as integer,",
						"          EVENT_DATE as date,",
						"          FECHA_CARGA as string,",
						"          DESC_EVENT_TYPE_H as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STAGEREALSALES",
						"source(output(",
						"          ID_EVENT_TYPE as integer,",
						"          DESC_EVENT_TYPE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMEVENTTYPE",
						"aggregate1, DIMEVENTTYPE join(upper(event_type) == upper(DESC_EVENT_TYPE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"select1 aggregate(groupBy(event_type,",
						"          product_id,",
						"          user_session,",
						"          user_id,",
						"          FECHA),",
						"     price = sum(price)) ~> aggregate1",
						"STAGEREALSALES select(mapColumn(",
						"          event_type = DESC_EVENT_TYPE_H,",
						"          product_id = ID_PRODUCT,",
						"          price = PRICE,",
						"          user_id = ID_USER,",
						"          user_session = ID_USER_SESION,",
						"          FECHA = EVENT_DATE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"join1 split(isNull(ID_EVENT_TYPE) == false(),",
						"     disjoint: false) ~> split1@(LLAVESLLENAS, HUERFANOS)",
						"split1@HUERFANOS derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn2",
						"split1@LLAVESLLENAS sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_USER_SESION as string,",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          ID_USER as integer,",
						"          EVENT_DATE as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_USER_SESION = user_session,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = price,",
						"          ID_USER = user_id,",
						"          EVENT_DATE = FECHA",
						"     )) ~> FACTSALESECOMM",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_USER_SESION as string,",
						"          ID_PRODUCT as integer,",
						"          ID_EVENT_TYPE as integer,",
						"          PRICE as decimal(24,10),",
						"          ID_USER as integer,",
						"          EVENT_DATE as date,",
						"          FECHA_CARGA as string,",
						"          DESC_EVENT_TYPE_H as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_USER_SESION = user_session,",
						"          ID_PRODUCT = product_id,",
						"          ID_EVENT_TYPE,",
						"          PRICE = price,",
						"          ID_USER = user_id,",
						"          EVENT_DATE = FECHA,",
						"          FECHA_CARGA,",
						"          DESC_EVENT_TYPE_H = DESC_EVENT_TYPE",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUER_FACT_F_PPTO')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_ER_FACT_PPTO_FISICA",
								"type": "DatasetReference"
							},
							"name": "STGPPTOTIENDAFISICA"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SHIP_MODE",
								"type": "DatasetReference"
							},
							"name": "DIMFSHIPMODE"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_REGION",
								"type": "DatasetReference"
							},
							"name": "TDIMFREGION"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_PPTO_FISICA",
								"type": "DatasetReference"
							},
							"name": "FACTPPTOTIENDAFISICA",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_FACT_PPTO_FISICA",
								"type": "DatasetReference"
							},
							"name": "ERROR"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "cast1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_PRODUCT as string,",
						"          IMP_PPTO_GANANCIA as decimal(24,10),",
						"          ID_REGION as integer,",
						"          ID_SHIP_MODE as integer,",
						"          MONTH as string,",
						"          YEAR as string,",
						"          FECHA_CARGA as string,",
						"          DESC_SHIP_MODE_H as string,",
						"          DESC_REGION_H as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPPTOTIENDAFISICA",
						"source(output(",
						"          ID_SHIP_MODE as integer,",
						"          DESC_SHIP_MODE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMFSHIPMODE",
						"source(output(",
						"          ID_REGION as integer,",
						"          NAME_REGION as string,",
						"          DESC_MANAGER as string,",
						"          FEC_INI as date,",
						"          FEC_FIN as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TDIMFREGION",
						"derivedColumn2 aggregate(groupBy(Product_ID = ID_PRODUCT,",
						"          Region = upper(DESC_REGION_H),",
						"          Ship_Mode = upper(DESC_SHIP_MODE_H),",
						"          YEAR,",
						"          MONTH,",
						"          FECHATOREGION),",
						"     IMPORTE_PPTO_GANANCIA = sum(IMP_PPTO_GANANCIA)) ~> aggregate1",
						"aggregate1, DIMFSHIPMODE join(Ship_Mode == DESC_SHIP_MODE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"cast1, TDIMFREGION join(FECHATOREGION >= FEC_INI && (FECHATOREGION <FEC_FIN || isNull(FEC_FIN)== true()) && Region == NAME_REGION,",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"STGPPTOTIENDAFISICA derive(FECHATOREGION = concat(YEAR,'-',MONTH,'-01')) ~> derivedColumn2",
						"join1 cast(output(",
						"          FECHATOREGION as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"join2 split(isNull(ID_SHIP_MODE) == false() || isNull(ID_REGION)==false(),",
						"     disjoint: false) ~> split1@(LlavesLlenas, HUERFANOS)",
						"split1@HUERFANOS derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn3",
						"split1@LlavesLlenas sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as string,",
						"          IMP_PPTO_GANANCIA as decimal(24,10),",
						"          ID_REGION as integer,",
						"          ID_SHIP_MODE as integer,",
						"          MONTH as string,",
						"          YEAR as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_PRODUCT = Product_ID,",
						"          IMP_PPTO_GANANCIA = IMPORTE_PPTO_GANANCIA,",
						"          ID_REGION,",
						"          ID_SHIP_MODE,",
						"          MONTH,",
						"          YEAR",
						"     )) ~> FACTPPTOTIENDAFISICA",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PRODUCT as string,",
						"          IMP_PPTO_GANANCIA as decimal(24,10),",
						"          ID_REGION as integer,",
						"          ID_SHIP_MODE as integer,",
						"          MONTH as string,",
						"          YEAR as string,",
						"          FECHA_CARGA as string,",
						"          DESC_SHIP_MODE_H as string,",
						"          DESC_REGION_H as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID_PRODUCT = Product_ID,",
						"          IMP_PPTO_GANANCIA = IMPORTE_PPTO_GANANCIA,",
						"          ID_REGION,",
						"          ID_SHIP_MODE,",
						"          MONTH,",
						"          YEAR,",
						"          FECHA_CARGA,",
						"          DESC_SHIP_MODE_H = DESC_SHIP_MODE,",
						"          DESC_REGION_H = NAME_REGION",
						"     )) ~> ERROR"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUER_FACT_F_SALES')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "T_ER_FACT_SALES_FISICA",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA_RETURNS",
								"type": "DatasetReference"
							},
							"name": "RETURNS"
						},
						{
							"dataset": {
								"referenceName": "T_DIM_F_SHIP_MODE",
								"type": "DatasetReference"
							},
							"name": "DIMSHIPMODE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "T_FACT_SALES_FISICA",
								"type": "DatasetReference"
							},
							"name": "TFACTSALESFISICA",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStoragegr3",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "T_ER_FACT_SALES_FISICA",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "RETURNS1"
						},
						{
							"name": "join2"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "cast1"
						},
						{
							"name": "split1"
						},
						{
							"name": "derivedColumn3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_ORDER as string,",
						"          ID_PRODUCT as string,",
						"          ORDER_DATE as date,",
						"          SHIP_DATE as date,",
						"          ID_SHIP_MODE as integer,",
						"          ID_CUSTOMER as string,",
						"          IMPORTE as decimal(24,10),",
						"          QUANTITY as integer,",
						"          DISCOUNT as decimal(24,10),",
						"          PROFIT as decimal(24,10),",
						"          ID_RETURNED as integer,",
						"          PRECIO_TOTAL as decimal(24,10),",
						"          FECHA_CARGA as string,",
						"          DESC_SHIP_MODE_H as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          Returned as string,",
						"          Order_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> RETURNS",
						"source(output(",
						"          ID_SHIP_MODE as integer,",
						"          DESC_SHIP_MODE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DIMSHIPMODE",
						"source1 select(mapColumn(",
						"          Order_ID = ID_ORDER,",
						"          Order_Date = ORDER_DATE,",
						"          Ship_Date = SHIP_DATE,",
						"          Ship_Mode = DESC_SHIP_MODE_H,",
						"          Customer_ID = ID_CUSTOMER,",
						"          Product_ID = ID_PRODUCT,",
						"          Importe = IMPORTE,",
						"          Quantity = QUANTITY,",
						"          Discount = DISCOUNT,",
						"          Profit = PROFIT",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 filter(isNull(Order_ID)==false() && isNull(Quantity)==false() && Quantity >=1 && isNull(Product_ID)==false() && isNull(Customer_ID)==false() && filtrofecha == 1) ~> filter1",
						"select1 derive(filtrofecha = iif(Order_Date>Ship_Date,0,1),",
						"          Precio_Total = Importe*Quantity) ~> derivedColumn1",
						"filter1, RETURNS join(select1@Order_ID == RETURNS@Order_ID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> RETURNS1",
						"RETURNS1, DIMSHIPMODE join(upper(Ship_Mode) == upper(DESC_SHIP_MODE),",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"derivedColumn2 aggregate(groupBy(Order_ID = upper(select1@Order_ID),",
						"          Product_ID = upper(Product_ID),",
						"          Order_Date,",
						"          Ship_Date,",
						"          ID_SHIP_MODE,",
						"          Customer_ID = upper(Customer_ID),",
						"          Returned = upper(Returned),",
						"          ID_RETURNED,",
						"          Ship_Mode),",
						"     Importe = sum(Importe),",
						"          Quantity = sum(Quantity),",
						"          Discount = sum(Discount),",
						"          Profit = sum(Profit),",
						"          Precio_Total = sum(Precio_Total)) ~> aggregate1",
						"join2 derive(ID_RETURNED = iif(upper(Returned)=='YES',1,0)) ~> derivedColumn2",
						"aggregate1 cast(output(",
						"          Order_Date as date 'yyyy-MM-dd',",
						"          Ship_Date as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"cast1 split(isNull(ID_SHIP_MODE) == false(),",
						"     disjoint: false) ~> split1@(LLAVESOK, HUERFANOS)",
						"split1@HUERFANOS derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn3",
						"split1@LLAVESOK sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_ORDER as string,",
						"          ID_PRODUCT as string,",
						"          ORDER_DATE as date,",
						"          SHIP_DATE as date,",
						"          ID_SHIP_MODE as integer,",
						"          ID_CUSTOMER as string,",
						"          IMPORTE as decimal(24,10),",
						"          QUANTITY as integer,",
						"          DISCOUNT as decimal(24,10),",
						"          PROFIT as decimal(24,10),",
						"          ID_RETURNED as integer,",
						"          PRECIO_TOTAL as decimal(24,10)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     outputAssertFailedRows: true,",
						"     assertFailure_container: 'contenedor-gr3',",
						"     assertFailure_folderPath: 'ERRORES',",
						"     mapColumn(",
						"          ID_ORDER = Order_ID,",
						"          ID_PRODUCT = Product_ID,",
						"          ORDER_DATE = Order_Date,",
						"          SHIP_DATE = Ship_Date,",
						"          ID_SHIP_MODE,",
						"          ID_CUSTOMER = Customer_ID,",
						"          IMPORTE = Importe,",
						"          QUANTITY = Quantity,",
						"          DISCOUNT = Discount,",
						"          PROFIT = Profit,",
						"          ID_RETURNED,",
						"          PRECIO_TOTAL = Precio_Total",
						"     )) ~> TFACTSALESFISICA",
						"derivedColumn3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_ORDER as string,",
						"          ID_PRODUCT as string,",
						"          ORDER_DATE as date,",
						"          SHIP_DATE as date,",
						"          ID_SHIP_MODE as integer,",
						"          ID_CUSTOMER as string,",
						"          IMPORTE as decimal(24,10),",
						"          QUANTITY as integer,",
						"          DISCOUNT as decimal(24,10),",
						"          PROFIT as decimal(24,10),",
						"          ID_RETURNED as integer,",
						"          PRECIO_TOTAL as decimal(24,10),",
						"          FECHA_CARGA as string,",
						"          DESC_SHIP_MODE_H as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ID_ORDER = Order_ID,",
						"          ID_PRODUCT = Product_ID,",
						"          ORDER_DATE = Order_Date,",
						"          SHIP_DATE = Ship_Date,",
						"          ID_SHIP_MODE,",
						"          ID_CUSTOMER = Customer_ID,",
						"          IMPORTE = Importe,",
						"          QUANTITY = Quantity,",
						"          DISCOUNT = Discount,",
						"          PROFIT = Profit,",
						"          ID_RETURNED,",
						"          PRECIO_TOTAL = Precio_Total,",
						"          FECHA_CARGA,",
						"          DESC_SHIP_MODE_H = Ship_Mode",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARGA_DIMENSIONES_ECOMMERCE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Carga de dimensiones ECOMM",
				"activities": [
					{
						"name": "DIM_BRAND",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BRAND",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDATOSPRODUCTO": {},
									"DIMBRAND": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_CATEGORY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_BRAND",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_BEAUTY_CAT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_BEAUTY_CAT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_PRODUCTO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_BEAUTY_CAT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DATOSDEPRODUCTO": {},
									"DIMBEAUTYCAT": {},
									"DIMBRAND": {},
									"DIMPRODUCTO": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_EVENT_TYPE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_PRODUCTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_E_EVENT_TYPE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGEDWHPPTO": {},
									"STAGEEREALSALES": {},
									"DIMEVENTTYPE": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARGA_DIMENSIONES_FISICA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_F_CATEGORY",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SUB_CATEGORY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SUB_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"TDIMFCATEGORY": {},
									"dimfsubcategory": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_PRODUCT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_SUB_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSUBCATEGORIA": {},
									"DIMPRODUCTO": {},
									"HERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SHIP_MODE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SHIP_MODE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"STGPPTOTIENDAFISCA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_SEGMENT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_SHIP_MODE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_SEGMENT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGFSUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_CUSTOMER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"sink1": {},
									"UPDATEFECHAFIN": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_REGION_2STEP",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_REGION_2STEP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"superstoresalesdatapeople": {},
									"DIMFREGION1": {},
									"INSERT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CITY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_REGION_2STEP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CITY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDIMSALESDATS": {},
									"DIMFREGION": {},
									"dimfcity": {},
									"huerfanos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_F_CUSTOMER",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_F_SEGMENT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DIM_F_CUSTOMER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {},
									"sink1": {},
									"HUERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARGA_PRESUPUESTOS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FACT_E_PPTO",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTPPTOECOMM": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FACT_F_PPTO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "FACT_E_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_F_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGPPTOTIENDAFISICA": {},
									"DIMFSHIPMODE": {},
									"TDIMFREGION": {},
									"FACTPPTOTIENDAFISICA": {},
									"ERROR": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GRD_DIMENSIONES')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_GRD_MEDIO_PAGO",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GRD_DIM_MEDIO_PAGO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"TGRDMEDOPAGO": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "GRD_UPDATE_AGE_CUSTOMER",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DIM_GRD_MEDIO_PAGO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GRD_UPDATE_AGE_CUSTOMER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"dimfcustomer": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "GRD_DIM_PRODDUCT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "GRD_UPDATE_AGE_CUSTOMER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GRD_DIM_PRODDUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEGRD": {},
									"dimproducto": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GRD_FACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GRD_FACT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GRD_FACT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TSTAGEGRD": {},
									"mediodepago": {},
									"DIMPRODUCTO": {},
									"TGRDFACT": {},
									"HUERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARGA_VENTAS_ECOMMERCE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CARGA_DIMENSIONES_ECOMMERCE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CARGA_DIMENSIONES_ECOMMERCE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FACT_E_SALES",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CARGA_DIMENSIONES_ECOMMERCE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_E_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTSALESECOMM": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CARGA_DIMENSIONES_ECOMMERCE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARGA_VENTAS_FISICA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CARGA_DIMENSIONES_FISICA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CARGA_DIMENSIONES_FISICA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FACT_F_SALES",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CARGA_DIMENSIONES_FISICA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FACT_F_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"RETURNS": {},
									"DIMSHIPMODE": {},
									"TFACTSALESFISICA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CARGA_DIMENSIONES_FISICA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GESTION_HUERFANOS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HUER_DIM_F_CITY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CARGA_DIMENSIONES_FISICA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_DIM_F_CITY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDIMSALESDATS": {},
									"DIMFREGION": {},
									"dimfcity": {},
									"huerfanos": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_DIM_F_CUSTOMER",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_DIM_F_CITY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_DIM_F_CUSTOMER",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSEGMENT": {},
									"sink1": {},
									"HUERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_DIM_F_SUB_CATEGORY",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_DIM_F_CUSTOMER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_DIM_F_SUB_CATEGORY",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"TDIMFCATEGORY": {},
									"dimfsubcategory": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_DIM_F_PRODUCT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_DIM_F_SUB_CATEGORY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_DIM_F_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SUPERSTORESALESDATA": {},
									"DIMFSUBCATEGORIA": {},
									"DIMPRODUCTO": {},
									"HERFANOS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_DIM_E_PRODUCT",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_DIM_F_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_DIM_E_PRODUCT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DATOSDEPRODUCTO": {},
									"DIMBEAUTYCAT": {},
									"DIMBRAND": {},
									"DIMPRODUCTO": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_FACT_E_PPTO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_DIM_E_PRODUCT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_FACT_E_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTPPTOECOMM": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_FACT_F_PPTO",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_FACT_E_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_FACT_F_PPTO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGPPTOTIENDAFISICA": {},
									"DIMFSHIPMODE": {},
									"TDIMFREGION": {},
									"FACTPPTOTIENDAFISICA": {},
									"ERROR": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_FACT_E_SALES",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_FACT_F_PPTO",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_FACT_E_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STAGEREALSALES": {},
									"DIMEVENTTYPE": {},
									"FACTSALESECOMM": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HUER_FACT_F_SALES",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "HUER_FACT_E_SALES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "HUER_FACT_F_SALES",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"RETURNS": {},
									"DIMSHIPMODE": {},
									"TFACTSALESFISICA": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "CARGA_DIMENSIONES_ECOMMERCE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CARGA_DIMENSIONES_ECOMMERCE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CARGA_DIMENSIONES_FISICA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CARGA_DIMENSIONES_ECOMMERCE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CARGA_DIMENSIONES_FISICA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/HUER_FACT_E_PPTO')]",
				"[concat(variables('factoryId'), '/dataflows/HUER_FACT_F_PPTO')]",
				"[concat(variables('factoryId'), '/dataflows/HUER_FACT_E_SALES')]",
				"[concat(variables('factoryId'), '/dataflows/HUER_FACT_F_SALES')]",
				"[concat(variables('factoryId'), '/pipelines/CARGA_DIMENSIONES_ECOMMERCE')]",
				"[concat(variables('factoryId'), '/pipelines/CARGA_DIMENSIONES_FISICA')]"
			]
		}
	]
}