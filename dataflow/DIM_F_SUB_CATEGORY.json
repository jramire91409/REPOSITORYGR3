{
	"name": "DIM_F_SUB_CATEGORY",
	"properties": {
		"description": "Carga de la DIM_BRAND",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "T_DIM_F_CATEGORY",
						"type": "DatasetReference"
					},
					"name": "TDIMFCATEGORY"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "T_DIM_F_SUB_CATEGORY",
						"type": "DatasetReference"
					},
					"name": "dimfsubcategory",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStoragegr3",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "T_ER_DIM_F_SUBCATEGORY",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStoragegr3",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "aggregate2"
				},
				{
					"name": "Modificarfila1"
				},
				{
					"name": "IDCATEGORY"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Order_ID as string,",
				"          Order_Date as string,",
				"          Ship_Date as string,",
				"          Ship_Mode as string,",
				"          Customer_ID as string,",
				"          Customer_Name as string,",
				"          Segment as string,",
				"          Country as string,",
				"          City as string,",
				"          State as string,",
				"          Postal_Code as integer,",
				"          Region as string,",
				"          Product_ID as string,",
				"          Category as string,",
				"          Sub_Category as string,",
				"          Product_Name as string,",
				"          Sales as decimal(38,10),",
				"          Quantity as integer,",
				"          Discount as decimal(38,10),",
				"          Profit as decimal(38,10)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          ID_CATEGORY as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TDIMFCATEGORY",
				"IDCATEGORY aggregate(groupBy(SUB_CATEGORY = upper(Sub_Category),",
				"          ID_CATEGORY),",
				"     COUNT = count()) ~> aggregate2",
				"aggregate2 alterRow(upsertIf(isNull(SUB_CATEGORY)==false())) ~> Modificarfila1",
				"source1, TDIMFCATEGORY join(upper(Category) == upper(DESCRIPTION),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> IDCATEGORY",
				"Modificarfila1 split(isNull(ID_CATEGORY) == false(),",
				"     disjoint: false) ~> split1@(LLAVESLLENAS, HUERFANOS)",
				"split1@HUERFANOS derive(FECHA_CARGA = currentTimestamp()) ~> derivedColumn1",
				"split1@LLAVESLLENAS sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DESC_SUB_CATEGORY as string,",
				"          ID_SUBCATEGORY as integer,",
				"          ID_CATEGORY as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['DESC_SUB_CATEGORY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'contenedor-gr3',",
				"     assertFailure_folderPath: 'ERRORES',",
				"     mapColumn(",
				"          DESC_SUB_CATEGORY = SUB_CATEGORY,",
				"          ID_CATEGORY",
				"     )) ~> dimfsubcategory",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DESC_SUB_CATEGORY as string,",
				"          ID_SUBCATEGORY as integer,",
				"          ID_CATEGORY as integer,",
				"          FECHA_CARGA as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'contenedor-gr3',",
				"     assertFailure_folderPath: 'ERRORES') ~> sink1"
			]
		}
	}
}