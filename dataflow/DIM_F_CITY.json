{
	"name": "DIM_F_CITY",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "T_STG_F_SUPERSTORE_SALES_DATA",
						"type": "DatasetReference"
					},
					"name": "STGDIMSALESDATS"
				},
				{
					"dataset": {
						"referenceName": "T_DIM_F_REGION",
						"type": "DatasetReference"
					},
					"name": "DIMFREGION"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "T_DIM_F_CITY",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "select1"
				},
				{
					"name": "join1"
				},
				{
					"name": "Modificarfila1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Order_ID as string,",
				"          Order_Date as string,",
				"          Ship_Date as string,",
				"          Ship_Mode as string,",
				"          Customer_ID as string,",
				"          Customer_Name as string,",
				"          Segment as string,",
				"          Country as string,",
				"          City as string,",
				"          State as string,",
				"          Postal_Code as integer,",
				"          Region as string,",
				"          Product_ID as string,",
				"          Category as string,",
				"          Sub_Category as string,",
				"          Product_Name as string,",
				"          Sales as decimal(38,10),",
				"          Quantity as integer,",
				"          Discount as decimal(38,10),",
				"          Profit as decimal(38,10)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGDIMSALESDATS",
				"source(output(",
				"          ID_REGION as integer,",
				"          NAME_REGION as string,",
				"          DESC_MANAGER as string,",
				"          FEC_INI as date,",
				"          FEC_FIN as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DIMFREGION",
				"select1 aggregate(groupBy(City = upper(City),",
				"          State = upper(State),",
				"          Country = upper(Country),",
				"          Postal_Code,",
				"          Region = upper(Region)),",
				"     count = count()) ~> aggregate1",
				"STGDIMSALESDATS select(mapColumn(",
				"          Country,",
				"          City,",
				"          State,",
				"          Postal_Code,",
				"          Region",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn1, DIMFREGION join(FECHATOREGION >= FEC_INI && (FECHATOREGION <FEC_FIN || isNull(FEC_FIN)== true()) && Region == NAME_REGION,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 alterRow(upsertIf(isNull(Postal_Code)==false())) ~> Modificarfila1",
				"aggregate1 derive(FECHATOREGION = currentDate()) ~> derivedColumn1",
				"Modificarfila1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DESC_CITY as string,",
				"          DESC_STATE as string,",
				"          DESC_COUNTRY as string,",
				"          ID_POSTAL_CODE as integer,",
				"          ID_REGION as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['ID_POSTAL_CODE'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          DESC_CITY = City,",
				"          DESC_STATE = State,",
				"          DESC_COUNTRY = Country,",
				"          ID_POSTAL_CODE = Postal_Code,",
				"          ID_REGION",
				"     )) ~> sink1"
			]
		}
	}
}